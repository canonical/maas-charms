[tox]
requires =
    tox>=4.2
env_list =
    format
    lint
    static-{charm, lib}
    unit
    scenario
no_package = true
skip_missing_interpreters = true
basepython = py38

[testenv]
pass_env =
    CHARM_BUILD_DIR
    MODEL_SETTINGS
    PYTHONPATH
set_env =
    PYTHONBREAKPOINT = pdb.set_trace
    PYTHONPATH = {tox_root}/lib:{[vars]src_path}
    PY_COLORS = 1

[testenv:format]
description = Apply coding style standards to code
deps =
    pyproject-fmt
    ruff
    tox-ini-fmt
commands =
    ruff format {[vars]all_path}
    ruff check --fix {[vars]all_path}
    - pyproject-fmt pyproject.toml
    - tox-ini-fmt tox.ini

[testenv:lint]
description = Check code against coding style standards
deps =
    codespell
    pyproject-fmt
    ruff
commands =
    codespell {tox_root}
    ruff check {[vars]all_path}
    pyproject-fmt --check pyproject.toml

[testenv:unit]
description = Run unit tests
deps =
    -r {tox_root}/requirements.txt
    coverage[toml]
    pytest
commands =
    coverage run --source={[vars]src_path} \
      -m pytest \
      --tb native \
      -v \
      -s \
      {posargs} \
      {[vars]tests_path}/unit
    coverage report

[testenv:scenario]
description = Run scenario tests
deps =
    -r {tox_root}/requirements.txt
    cosl
    ops-scenario
    pytest
commands =
    pytest -v -s --tb native {posargs} --log-cli-level=INFO {[vars]tests_path}/scenario

[testenv:static-{charm,lib}]
description = Run static analysis checks
deps =
    pyright
    typing-extensions
    charm: -r{toxinidir}/requirements.txt
    integration: {[testenv:integration]deps}
    lib: jinja2
    lib: ops
    unit: {[testenv:unit]deps}
commands =
    charm: pyright --pythonversion 3.8 {[vars]src_path} {posargs}
    lib: pyright --pythonversion 3.8 {[vars]lib_path} {posargs}
    lib: /usr/bin/env sh -c 'for m in $(git diff main --name-only --line-prefix=`git rev-parse --show-toplevel`/ {[vars]lib_path}); do if ! git diff main $m | grep -q "+LIBPATCH\|+LIBAPI"; then echo "You forgot to bump the version on $m!"; exit 1; fi; done'
allowlist_externals =
    /usr/bin/env

[testenv:integration]
description = Run integration tests
deps =
    -r {tox_root}/requirements.txt
    juju
    pytest
    pytest-operator
commands =
    pytest -v \
      -s \
      --tb native \
      --log-cli-level=INFO \
      {posargs} \
      {[vars]tests_path}/integration

[vars]
src_path = {tox_root}/src
tests_path = {tox_root}/tests
lib_path = {tox_root}/lib/charms/maas_region/v0/
all_path = {[vars]src_path} {[vars]tests_path} {[vars]lib_path}
